## BUILD_PREFIX=repo.irsl.eiiris.tut.ac.jp/
## docker build --progress=plain -f Dockerfile.xeus3 --build-arg BUILD_IMAGE=ubuntu:20.04 --build-arg BASE_IMAGE=ubuntu:20.04 -t xeus3:20.04 .
## docker build --progress=plain -f Dockerfile.xeus3 --build-arg BUILD_IMAGE=ubuntu:24.04 --build-arg BASE_IMAGE=ubuntu:24.04 --build-arg OUTPUT_DIR=/opt/xeus -t repo.irsl.eiiris.tut.ac.jp/xeus:24.04 .
### global ARG
ARG OUTPUT_DIR=/opt/xeus3
ARG BUILD_IMAGE=ubuntu:20.04
ARG BASE_IMAGE=ubuntu:20.04

###
#
#
#
###
FROM ${BUILD_IMAGE} as builder

ARG OUTPUT_DIR

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive

# xtl-dev (failed at 20.04, version missmatch)
RUN apt update -q -qq && \
    apt install -q -qq -y wget cmake g++ git openssl pkg-config libzmq5-dev uuid-dev libssl-dev libsodium-dev lsb-release && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

WORKDIR /build_xeus
### xeus
## json
RUN (mkdir json && wget https://github.com/nlohmann/json/archive/refs/tags/v3.11.3.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C json)
RUN (cd json; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} . ; make install -j$(nproc) )
## xtl
RUN (mkdir xtl && wget https://github.com/xtensor-stack/xtl/archive/refs/tags/0.7.5.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C xtl)
RUN (cd xtl; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} . ; make install -j$(nproc) )
## xeus / 3.1.5
#RUN (mkdir xeus && wget https://github.com/jupyter-xeus/xeus/archive/refs/tags/3.1.5.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C xeus)
#RUN (cd xeus; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} . ; make install -j$(nproc) )
## xeus / 3.2.0
RUN (mkdir xeus && wget https://github.com/jupyter-xeus/xeus/archive/refs/tags/3.2.0.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C xeus)
RUN (cd xeus; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} . ; make install -j$(nproc) )

### xeus-zmp
## libzmq
#RUN (mkdir libzmq && wget https://github.com/zeromq/libzmq/archive/refs/tags/v4.3.4.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C libzmq)
#RUN (cd libzmq; mkdir build; cd build; cmake -DWITH_PERF_TOOL=OFF -DZMQ_BUILD_TESTS=OFF -DENABLE_CPACK=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} ..; make install -j$(nproc) )
## cppzmq
RUN (mkdir cppzmq && wget https://github.com/zeromq/cppzmq/archive/refs/tags/v4.8.1.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C cppzmq)
RUN (cd cppzmq; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} -DCPPZMQ_BUILD_TESTS=OFF . ; make install -j$(nproc) )
## xeus-zmq 1.1.1
#RUN (mkdir -p xeus-zmq/build && wget https://github.com/jupyter-xeus/xeus-zmq/archive/refs/tags/1.1.0.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C xeus-zmq)
#RUN (cd xeus-zmq/build; cmake -DCMAKE_PREFIX_PATH=${OUTPUT_DIR} -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} -DCMAKE_BUILD_TYPE=Release ..; make install -j$(nproc) )
## xeus-zmq 1.3.0 / iopub_welcome does not match with jupyter-console
#RUN (mkdir -p xeus-zmq/build && wget https://github.com/jupyter-xeus/xeus-zmq/archive/refs/tags/1.3.0.tar.gz --quiet -O - | tar zxf - --strip-components 1 -C xeus-zmq)
#RUN (cd xeus-zmq/build; cmake -DCMAKE_PREFIX_PATH=${OUTPUT_DIR} -DCMAKE_INSTALL_PREFIX=${OUTPUT_DIR} -DCMAKE_BUILD_TYPE=Release ..; make install -j$(nproc) )

###
#
#
#
###
FROM ${BASE_IMAGE}

ARG OUTPUT_DIR

LABEL maintainer "IRSL-tut (https://github.com/IRSL-tut) <faculty@irsl.eiiris.tut.ac.jp>"

SHELL ["/bin/bash", "-c"]
ENV DEBIAN_FRONTEND=noninteractive

# xtl-dev 
RUN apt update -q -qq && \
    apt install -q -qq -y                    openssl pkg-config libzmq5-dev uuid-dev libssl-dev libsodium-dev lsb-release && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

COPY --from=builder ${OUTPUT_DIR} ${OUTPUT_DIR}

RUN apt update -q -qq && \
    apt install -q -qq -y wget python3-pip && \
    apt clean && \
    rm -rf /var/lib/apt/lists/ && \
    if [ "$(lsb_release -s -r)" = "24.04" ]; then PIP_OPT="--break-system-packages"; else python3 -m pip install --upgrade pip; fi && \
    python3 -m pip install $PIP_OPT jupyterlab

ENV JUPYTER_PATH=${OUTPUT_DIR}/share/jupyter
CMD ["jupyter", "lab", "--allow-root"]

#
# sample
#
## docker run -it --net=host -v $(pwd):/hoge -w /hoge xeus:20.04 bash
## jupyter lab --allow-root
## cmake -DCMAKE_PREFIX_PATH=${OUTPUT_DIR}/share/cmake -DZeroMQ_DIR=${OUTPUT_DIR}/lib/cmake/ZeroMQ ....
